<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LayBlog</title>
  
  <subtitle>记录学习的技能和遇到的问题</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-03-16T02:06:40.655Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>秦旭</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Angular路由ng-controller中as的作用</title>
    <link href="http://yoursite.com/2018/03/16/Angular%E8%B7%AF%E7%94%B1ng-controller%E4%B8%ADas%E7%9A%84%E4%BD%9C%E7%94%A8/"/>
    <id>http://yoursite.com/2018/03/16/Angular路由ng-controller中as的作用/</id>
    <published>2018-03-16T02:00:25.000Z</published>
    <updated>2018-03-16T02:06:40.655Z</updated>
    
    <content type="html"><![CDATA[<h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><blockquote><p>$scope 会从父级controller创建的作用域进行原型继承，但又不会被覆盖,如下:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">firstCtrl</span>(<span class="params">$scope</span>)</span>&#123;</span><br><span class="line">$scope.value = <span class="string">"123456"</span>;</span><br><span class="line">&#125;；</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">secondCtrl</span>(<span class="params">$scope</span>)</span>&#123;</span><br><span class="line">$scope.value = <span class="string">"654321"</span>；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-controller</span> = <span class="string">"firstCtrl"</span>&gt;</span></span><br><span class="line">&#123;&#123;value&#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-controller</span> = <span class="string">"secondCtrl"</span>&gt;</span></span><br><span class="line">&#123;&#123;value&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>显示结果：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-controller</span> = <span class="string">"firstCtrl"</span>&gt;</span></span><br><span class="line">123456</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-controller</span> = <span class="string">"secondCtrl"</span>&gt;</span></span><br><span class="line">654321</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>当secondCtrl中$scope.value被注释后：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">firstCtrl</span>(<span class="params">$scope</span>)</span>&#123;</span><br><span class="line">$scope.value = <span class="string">"123456"</span>;</span><br><span class="line">&#125;；</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">secondCtrl</span>(<span class="params">$scope</span>)</span>&#123;</span><br><span class="line"><span class="comment">// $scope.value = "654321"；</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-controller</span> = <span class="string">"firstCtrl"</span>&gt;</span></span><br><span class="line">123456</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-controller</span> = <span class="string">"secondCtrl"</span>&gt;</span></span><br><span class="line">123456</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>在secondCtrl中没有定义value，但是会继承firstCtrl中的 value 显示“123456”；<br>进行原型继承即意味着父作用域在子作用域的原型链上，这是JavaScript的特性；<br>所以在angular 1.2以后有了controller as；</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-controller</span> = <span class="string">"firstCtrl as first"</span>&gt;</span></span><br><span class="line">&#123;&#123;first.value&#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-controller</span> = <span class="string">"secondCtrl as second"</span>&gt;</span></span><br><span class="line">&#123;&#123;second.value&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;作用域&quot;&gt;&lt;a href=&quot;#作用域&quot; class=&quot;headerlink&quot; title=&quot;作用域&quot;&gt;&lt;/a&gt;作用域&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;$scope 会从父级controller创建的作用域进行原型继承，但又不会被覆盖,如下:&lt;/p&gt;
&lt;/b
      
    
    </summary>
    
      <category term="AngularJS" scheme="http://yoursite.com/categories/AngularJS/"/>
    
    
      <category term="AngularJS" scheme="http://yoursite.com/tags/AngularJS/"/>
    
      <category term="route" scheme="http://yoursite.com/tags/route/"/>
    
  </entry>
  
  <entry>
    <title>Cookie的添加、获取、删除</title>
    <link href="http://yoursite.com/2018/03/12/Cookie%E7%9A%84%E6%B7%BB%E5%8A%A0%E3%80%81%E8%8E%B7%E5%8F%96%E3%80%81%E5%88%A0%E9%99%A4/"/>
    <id>http://yoursite.com/2018/03/12/Cookie的添加、获取、删除/</id>
    <published>2018-03-12T07:54:46.000Z</published>
    <updated>2018-03-13T02:35:18.967Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>常用的会话跟踪技术是Cookie与Session。<br>Cookie是客户端保存用户信息的一种机制，用来记录用户的一些信息，服务器端可以对其进行处理;<br>session是存在服务器的,用于区分会话和不同用户的访问</p></blockquote><h2 id="设置Cookie"><a href="#设置Cookie" class="headerlink" title="设置Cookie"></a>设置Cookie</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SetCookie</span>(<span class="params">name,value,expires</span>)</span>&#123;<span class="comment">//cookie的名字、值、存储时间</span></span><br><span class="line"><span class="keyword">var</span> Days = expires? expires :<span class="number">30</span>; </span><br><span class="line"><span class="comment">//此 cookie 将被保存 expires(调用时自定义保存天数) 或者30 天</span></span><br><span class="line"><span class="keyword">var</span> exp  = <span class="keyword">new</span> <span class="built_in">Date</span>();    <span class="comment">//new Date("December 31, 9998");</span></span><br><span class="line">exp.setTime(exp.getTime() + Days*<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">1000</span>);</span><br><span class="line"><span class="built_in">document</span>.cookie = name + <span class="string">"="</span>+ <span class="built_in">escape</span> (value) + <span class="string">";expires="</span> + exp.toGMTString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="获取Cookie"><a href="#获取Cookie" class="headerlink" title="获取Cookie"></a>获取Cookie</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCookie</span>(<span class="params">name</span>)</span>&#123;<span class="comment">//取cookies函数        </span></span><br><span class="line"><span class="keyword">var</span> arr = <span class="built_in">document</span>.cookie.match(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^| )"</span>+name+<span class="string">"=([^;]*)(;|$)"</span>));</span><br><span class="line"> <span class="keyword">if</span>(arr != <span class="literal">null</span>) <span class="keyword">return</span> <span class="built_in">unescape</span>(arr[<span class="number">2</span>]); <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="删除Cookie"><a href="#删除Cookie" class="headerlink" title="删除Cookie"></a>删除Cookie</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">delCookie</span>(<span class="params">name</span>)</span>&#123;<span class="comment">//删除cookie</span></span><br><span class="line"><span class="keyword">var</span> exp = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">exp.setTime(exp.getTime() - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">var</span> cval=getCookie(name);</span><br><span class="line"><span class="keyword">if</span>(cval!=<span class="literal">null</span>) <span class="built_in">document</span>.cookie= name + <span class="string">"="</span>+cval+<span class="string">";expires="</span>+exp.toGMTString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SetCookie(<span class="string">'UserName'</span>,<span class="string">'Admin'</span>,<span class="number">30</span>);</span><br><span class="line">getCookie(<span class="string">'UserName'</span>);</span><br><span class="line">delCookie(<span class="string">'UserName'</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;常用的会话跟踪技术是Cookie与Session。&lt;br&gt;Cookie是客户端保存用户信息的一种机制，用来记录用户的一些信息，服务器端可以对其进行处理;&lt;br&gt;session是存在服务器的,用于区分会话和不同用户的访问&lt;/p&gt;
&lt;/blockquo
      
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="Cookie" scheme="http://yoursite.com/tags/Cookie/"/>
    
  </entry>
  
  <entry>
    <title>Chrome自动填充input文本框,黄底蓝边框问题</title>
    <link href="http://yoursite.com/2018/03/09/Chrome%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%85%85input%E6%96%87%E6%9C%AC%E6%A1%86-%E9%BB%84%E5%BA%95%E8%93%9D%E8%BE%B9%E6%A1%86%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/03/09/Chrome自动填充input文本框-黄底蓝边框问题/</id>
    <published>2018-03-09T05:48:49.000Z</published>
    <updated>2018-03-12T05:30:54.279Z</updated>
    
    <content type="html"><![CDATA[<h4 id="谷歌浏览器（Chrome）在开启自动填充账号密码功能时，input文本框会变成黄色背景，获取焦点时，变成蓝色边框，如下图："><a href="#谷歌浏览器（Chrome）在开启自动填充账号密码功能时，input文本框会变成黄色背景，获取焦点时，变成蓝色边框，如下图：" class="headerlink" title="谷歌浏览器（Chrome）在开启自动填充账号密码功能时，input文本框会变成黄色背景，获取焦点时，变成蓝色边框，如下图："></a>谷歌浏览器（Chrome）在开启自动填充账号密码功能时，input文本框会变成黄色背景，获取焦点时，变成蓝色边框，如下图：</h4><blockquote><p><img src="https://s1.ax1x.com/2018/03/09/9RihjA.png" alt="9RihjA.png" border="0"></p></blockquote><h4 id="这个背景是Chrome强制加的样式（-webkit-autofill）："><a href="#这个背景是Chrome强制加的样式（-webkit-autofill）：" class="headerlink" title="这个背景是Chrome强制加的样式（-webkit-autofill）："></a>这个背景是Chrome强制加的样式（-webkit-autofill）：</h4><blockquote><p><img src="https://s1.ax1x.com/2018/03/09/9Rijjs.png" alt="9Rijjs.png" border="0"></p></blockquote><h4 id="蓝色边框其实不是边框，是outline；"><a href="#蓝色边框其实不是边框，是outline；" class="headerlink" title="蓝色边框其实不是边框，是outline；"></a>蓝色边框其实不是边框，是outline；</h4><blockquote><p>outline （轮廓）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。</p></blockquote><h4 id="取消黄色背景？"><a href="#取消黄色背景？" class="headerlink" title="取消黄色背景？"></a>取消黄色背景？</h4><p>这个背景已经是加了!important，CSS样式处于最高优先级，所以替换是不可能的；<br>可以用阴影（box-shadow）来覆盖这个效果。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.loginInput</span><span class="selector-pseudo">:-webkit-autofill</span> &#123;</span><br><span class="line"><span class="attribute">-webkit-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0px</span> <span class="number">1000px</span> white inset<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>效果如下：</p><blockquote><p><img src="https://s1.ax1x.com/2018/03/09/9RkQZq.png" alt="9RkQZq.png" border="0"><br>不过你也可以按自己的喜好，将white换成其他颜色。</p></blockquote><h4 id="取消蓝色边框"><a href="#取消蓝色边框" class="headerlink" title="取消蓝色边框"></a>取消蓝色边框</h4><p>outline直接设置获取焦点是为 0 或 none 就可以取消蓝色的轮廓了。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.loginInput</span><span class="selector-pseudo">:focus</span>&#123;</span><br><span class="line">    <span class="attribute">outline</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;谷歌浏览器（Chrome）在开启自动填充账号密码功能时，input文本框会变成黄色背景，获取焦点时，变成蓝色边框，如下图：&quot;&gt;&lt;a href=&quot;#谷歌浏览器（Chrome）在开启自动填充账号密码功能时，input文本框会变成黄色背景，获取焦点时，变成蓝色边框，如下
      
    
    </summary>
    
      <category term="CSS" scheme="http://yoursite.com/categories/CSS/"/>
    
    
      <category term="Chrome" scheme="http://yoursite.com/tags/Chrome/"/>
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>简单搭建一个Node本地服务器</title>
    <link href="http://yoursite.com/2018/03/09/%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AANode%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://yoursite.com/2018/03/09/简单搭建一个Node本地服务器/</id>
    <published>2018-03-09T02:59:36.000Z</published>
    <updated>2018-03-12T02:04:24.165Z</updated>
    
    <content type="html"><![CDATA[<p>用node搭建一个简单的本地http服务器很容易，功能相当于apache服务器；</p><h2 id="1-首先安装nodejs服务"><a href="#1-首先安装nodejs服务" class="headerlink" title="1.首先安装nodejs服务"></a>1.首先安装nodejs服务</h2><p>（上篇文章有详细介绍，可移步查看）；</p><h2 id="2-创建一个新目录，并新建-server-js"><a href="#2-创建一个新目录，并新建-server-js" class="headerlink" title="2.创建一个新目录，并新建 server.js"></a>2.创建一个新目录，并新建 server.js</h2><p>（我在E:\wwwroot\NodeServer下创建了server.js文件）；<br><img src="https://s1.ax1x.com/2018/03/09/92veBD.png" alt="92veBD.png" border="0"></p><h3 id="在-server-js-中写入如下代码："><a href="#在-server-js-中写入如下代码：" class="headerlink" title="在 server.js 中写入如下代码："></a>在 server.js 中写入如下代码：</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http=<span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="comment">//开启服务</span></span><br><span class="line"><span class="keyword">var</span> server=http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'有客户端连接'</span>);<span class="comment">//创建连接成功显示在后台</span></span><br><span class="line">    res.writeHeader(<span class="number">200</span>,&#123;</span><br><span class="line">        <span class="string">'content-type'</span> : <span class="string">'text/html;charset="utf-8"'</span></span><br><span class="line">    &#125;);</span><br><span class="line">    res.write(<span class="string">'这是正文部分'</span>);<span class="comment">//显示给客户端</span></span><br><span class="line">    res.end();</span><br><span class="line">&#125;).listen(<span class="number">8888</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'服务器开启成功'</span>);</span><br></pre></td></tr></table></figure><hr><p>这样，一个简单的node服务器就搭建完成了；<br>Win + R 打开运行 输入 cmd 打开命令行工具，<br><img src="https://s1.ax1x.com/2018/03/09/92Xlad.png" alt="92Xlad.png" border="0"></p><h2 id="3-在cmd控制台中cd切换进server-js所在的目录，然后执行node-server-js命令"><a href="#3-在cmd控制台中cd切换进server-js所在的目录，然后执行node-server-js命令" class="headerlink" title="3.在cmd控制台中cd切换进server.js所在的目录，然后执行node server.js命令"></a>3.在cmd控制台中cd切换进server.js所在的目录，然后执行node server.js命令</h2><p><img src="https://s1.ax1x.com/2018/03/09/92vrvV.png" alt="92vrvV.png" border="0"><br>当提示“服务器开启成功”时，在浏览器端输入127.0.0.1:8888；<br>显示“这是正文内容”；</p><h2 id="4-进阶-添加-index-html"><a href="#4-进阶-添加-index-html" class="headerlink" title="4.进阶-添加 index.html"></a>4.进阶-添加 index.html</h2><h3 id="修改-server-js-中代码：（记得将-root-路径改为自己的文件路径）"><a href="#修改-server-js-中代码：（记得将-root-路径改为自己的文件路径）" class="headerlink" title="修改 server.js 中代码：（记得将 root 路径改为自己的文件路径）"></a>修改 server.js 中代码：（记得将 root 路径改为自己的文件路径）</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http=<span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">var</span> fs=<span class="built_in">require</span>(<span class="string">'fs'</span>); <span class="comment">//引入文件读取模块</span></span><br><span class="line"><span class="keyword">var</span> root=<span class="string">"E:/wwwroot/NodeServer/"</span> <span class="comment">//本地文件夹路径</span></span><br><span class="line"><span class="comment">//开启服务，监听8888端口</span></span><br><span class="line"><span class="keyword">var</span> server=http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'有客户端连接'</span>); <span class="comment">//创建连接成功显示在后台</span></span><br><span class="line"><span class="keyword">var</span> url=req.url;</span><br><span class="line"> <span class="keyword">var</span> file = root+url;</span><br><span class="line">fs.readFile(file,<span class="function"><span class="keyword">function</span>(<span class="params">err,data</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(err)&#123;</span><br><span class="line">        res.writeHeader(<span class="number">404</span>,&#123;</span><br><span class="line">            <span class="string">'content-type'</span> : <span class="string">'text/html;charset="utf-8"'</span></span><br><span class="line">        &#125;);</span><br><span class="line">       res.write(<span class="string">'&lt;h1&gt;404错误&lt;/h1&gt;&lt;p&gt;你要找的页面不存在&lt;/p&gt;'</span>);</span><br><span class="line">        res.end();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        res.writeHeader(<span class="number">200</span>,&#123;</span><br><span class="line">            <span class="string">'content-type'</span> : <span class="string">'text/html;charset="utf-8"'</span></span><br><span class="line">        &#125;);</span><br><span class="line">        res.write(data); <span class="comment">//将index.html显示在客户端</span></span><br><span class="line">        res.end();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;).listen(<span class="number">8888</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'服务器开启成功'</span>);</span><br></pre></td></tr></table></figure><p>在该文件夹下再建一个 index.html，内容为“hello world”；<br>然后以刚才的方式，命令行运行 node server.js；<br>浏览器 输入 <a href="http://localhost:8888/index.html" target="_blank" rel="noopener">http://localhost:8888/index.html</a> 即可看见 “hello world”；<br><img src="https://s1.ax1x.com/2018/03/09/92xjwF.png" alt="92xjwF.png" border="0"><br>一个node服务器搭建完成。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;用node搭建一个简单的本地http服务器很容易，功能相当于apache服务器；&lt;/p&gt;
&lt;h2 id=&quot;1-首先安装nodejs服务&quot;&gt;&lt;a href=&quot;#1-首先安装nodejs服务&quot; class=&quot;headerlink&quot; title=&quot;1.首先安装nodejs服务&quot;&gt;
      
    
    </summary>
    
      <category term="NodeJS" scheme="http://yoursite.com/categories/NodeJS/"/>
    
    
      <category term="NodeJS" scheme="http://yoursite.com/tags/NodeJS/"/>
    
  </entry>
  
  <entry>
    <title>NodeJS安装及环境配置详细教程</title>
    <link href="http://yoursite.com/2018/03/09/NodeJS%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2018/03/09/NodeJS安装及环境配置详细教程/</id>
    <published>2018-03-09T01:41:36.000Z</published>
    <updated>2018-03-12T02:03:43.961Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-NodeJS安装包下载-下载地址"><a href="#1-NodeJS安装包下载-下载地址" class="headerlink" title="1.NodeJS安装包下载: 下载地址"></a>1.NodeJS安装包下载: <a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">下载地址</a></h2><p><img src="https://s1.ax1x.com/2018/03/09/92O7Dg.png" alt="92O7Dg.png" border="0"><br>32位和64位的版本按需下载；<br><img src="https://s1.ax1x.com/2018/03/09/92XV8x.png" alt="92XV8x.png" border="0"></p><h2 id="2-msi格式文件，双击安装"><a href="#2-msi格式文件，双击安装" class="headerlink" title="2.msi格式文件，双击安装"></a>2.msi格式文件，双击安装</h2><p>然后一路 “next”,直到 finish；</p><h1 id=""><a href="#" class="headerlink" title=""></a><img src="https://s1.ax1x.com/2018/03/09/92XexK.png" alt="92XexK.png" border="0"></h1><h2 id="3-检查是否安装成功"><a href="#3-检查是否安装成功" class="headerlink" title="3.检查是否安装成功"></a>3.检查是否安装成功</h2><p>win + R 打开“运行”窗口，输入“cmd”，回车；<br><img src="https://s1.ax1x.com/2018/03/09/92Xlad.png" alt="92Xlad.png" border="0"><br>输入 ngde -v 回车、命令行输出node版本号，说明安装成功；<br>新版的nodejs中集成了npm，所以npm也已经安装好了，输入 npm -v 回车查看版本号；<br><img src="https://s1.ax1x.com/2018/03/09/92XGGt.png" alt="92XGGt.png" border="0"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-NodeJS安装包下载-下载地址&quot;&gt;&lt;a href=&quot;#1-NodeJS安装包下载-下载地址&quot; class=&quot;headerlink&quot; title=&quot;1.NodeJS安装包下载: 下载地址&quot;&gt;&lt;/a&gt;1.NodeJS安装包下载: &lt;a href=&quot;https:/
      
    
    </summary>
    
      <category term="NodeJS" scheme="http://yoursite.com/categories/NodeJS/"/>
    
    
      <category term="NodeJS" scheme="http://yoursite.com/tags/NodeJS/"/>
    
      <category term="npm" scheme="http://yoursite.com/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>关于DIV高度100%无效</title>
    <link href="http://yoursite.com/2018/03/08/%E5%85%B3%E4%BA%8EDIV%E9%AB%98%E5%BA%A6100%E6%97%A0%E6%95%88/"/>
    <id>http://yoursite.com/2018/03/08/关于DIV高度100无效/</id>
    <published>2018-03-08T09:45:50.000Z</published>
    <updated>2018-03-12T02:01:17.285Z</updated>
    
    <content type="html"><![CDATA[<p>给DIV设置height:100%时，DIV需要继承父级的高度，当DIV父级没有高度值时，DIV就继承为0；<br>所以，要给她的父级也要设置高度值；<br>如果要设置全屏类型网页，也要给body、html的高度为100%；</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;给DIV设置height:100%时，DIV需要继承父级的高度，当DIV父级没有高度值时，DIV就继承为0；&lt;br&gt;所以，要给她的父级也要设置高度值；&lt;br&gt;如果要设置全屏类型网页，也要给body、html的高度为100%；&lt;/p&gt;

      
    
    </summary>
    
      <category term="CSS" scheme="http://yoursite.com/categories/CSS/"/>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>你好_Hexo</title>
    <link href="http://yoursite.com/2018/03/07/%E4%BD%A0%E5%A5%BD-Hexo/"/>
    <id>http://yoursite.com/2018/03/07/你好-Hexo/</id>
    <published>2018-03-07T06:06:46.000Z</published>
    <updated>2018-03-08T07:38:41.281Z</updated>
    
    <content type="html"><![CDATA[<h1 id="A-First-Level-Header"><a href="#A-First-Level-Header" class="headerlink" title="A First Level Header"></a>A First Level Header</h1><h2 id="A-Second-Level-Header"><a href="#A-Second-Level-Header" class="headerlink" title="A Second Level Header"></a>A Second Level Header</h2><p>Now is the time for all good men to come to<br>the aid of their country. This is just a<br>regular paragraph.</p><p>The quick brown fox jumped over the lazy<br>dog’s back.</p><h3 id="Header-3"><a href="#Header-3" class="headerlink" title="Header 3"></a>Header 3</h3><blockquote><p>This is a blockquote.</p><p>This is the second paragraph in the blockquote.</p><h2 id="This-is-an-H2-in-a-blockquote"><a href="#This-is-an-H2-in-a-blockquote" class="headerlink" title="This is an H2 in a blockquote"></a>This is an H2 in a blockquote</h2></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;A-First-Level-Header&quot;&gt;&lt;a href=&quot;#A-First-Level-Header&quot; class=&quot;headerlink&quot; title=&quot;A First Level Header&quot;&gt;&lt;/a&gt;A First Level Header&lt;/h1&gt;&lt;
      
    
    </summary>
    
      <category term="hello" scheme="http://yoursite.com/categories/hello/"/>
    
    
      <category term="hello" scheme="http://yoursite.com/tags/hello/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/03/06/hello-world/"/>
    <id>http://yoursite.com/2018/03/06/hello-world/</id>
    <published>2018-03-06T09:43:14.000Z</published>
    <updated>2018-03-08T09:16:57.864Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="hello" scheme="http://yoursite.com/categories/hello/"/>
    
    
      <category term="test" scheme="http://yoursite.com/tags/test/"/>
    
      <category term="hello" scheme="http://yoursite.com/tags/hello/"/>
    
  </entry>
  
</feed>
